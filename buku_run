#!/bin/bash

_rofi () {
    rofi -dmenu -i -no-levenshtein-sort -width 1000 "$@"
}

# keybindings
switch_view="Alt+Tab"
new_bookmark="Alt+n"
edit="Alt+e"

# colors
help_color="#334433"

main () {
    HELP="Welcome to Buku. Use <span color='${help_color}'>Alt+n</span> to add a new Bookmark
Use <span color='${help_color}'>Alt+Tab</span> to switch Bookmarks/Tags view"
    if [[ $mode == "bookmarks" ]]; then
        content=$(buku -p -f 2 | awk 'NF == 2 { $0 = $0 "\tNOTAG" } { print }' | awk 'BEGIN { FS=OFS="\t" } { $1 = substr($1,0,80); print $1"\t"$2 }' | column -t)
#        content=$(buku -p -f 2 | awk 'NF == 2 { $0 = $0 "\tNOTAG" } { print }')
        menu=$(echo "${content}" | _rofi -p '> ' -filter "${filter}" -mesg "${HELP}" -kb-custom-1 "${new_bookmark}" -kb-custom-2 "${switch_view}" -kb-custom-3 "${edit}")
    elif [[ $mode == "tags" ]]; then
        menu=$(buku --st | awk '{ print substr($0, index($0,$2)) }' | _rofi -p '> ' -mesg "${HELP}" -kb-custom-1 "${new_bookmark}" -kb-custom-2 "${switch_view}")
    fi
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        optionsMenu
    elif [[ $val -eq 10 ]]; then
        addMark
    elif [[ $val -eq 11 ]]; then
        if [[ $mode == "bookmarks" ]]; then
            export mode="tags"
            mode=tags main
        elif [[ $mode == "tags" ]]; then
            export mode="bookmarks"
            mode=bookmarks main
        fi
    fi
}

optionsMenu () {
    if [[ $mode == "bookmarks" ]]; then
        askmenu=$(echo -e "< Return\n---\n1. Open\n2. Edit\n3. Delete" | _rofi -p '> ' -mesg "Choose Action for bookmark")
        val=$?
        if [[ $val -eq 1 ]]; then
            exit
        elif [[ $val -eq 0 ]]; then
            if [[ $askmenu == "< Return" ]]; then
                export mode=bookmarks
                main
            elif [[ $askmenu == "1. Open" ]]; then
                buku -o $(echo "${menu}" | awk '{ print $1 }')
            elif [[ $askmenu == "2. Edit" ]]; then
                editMenu
            elif [[ $askmenu == "3. Delete" ]]; then
                deleteMenu
            fi
        fi
    elif [[ $mode == "tags" ]]; then
        export mode="bookmarks"
        filter="${menu}" mode="bookmarks" main
    fi
}

deleteMenu () {
    id=${menu%% *}
    delask=$(echo -e "1. Yes\n2. No" | _rofi -p '> ' -mesg "Really delete bookmark?")
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        if [[ $delask == "1. Yes" ]]; then
            buku -d ${id}
            mode=bookmarks main
        elif [[ $delask == "2. No" ]]; then
            optionsMenu
        fi
    fi
}

editMenu () {
    bookmark=$(echo "${menu}" | awk '{ print $2 }')
    id=${menu%% *}
    tags=$(echo "${menu}" | awk -F "${bookmark}" '{ print $2 }' | sed 's/^[[:space:]]*//' | sed 's/,/, /g')
    content=$(echo -e "url:  $bookmark\ntags: $tags")
    editmenu=$(echo -e "< Return\n---\n${content}" | _rofi -p '> ')
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        if [[ $editmenu == "< Return" ]]; then
            main
        elif [[ $editmenu == "tags:"* ]]; then
            tags="${tags}" editTags
        elif [[ $editmenu == "url:"* ]]; then
            editBookmark
        fi
    fi
}

editTags () {
    edittagsmenu=$(echo | _rofi -filter "${tags}" -p '> ' -mesg "Edit Tags and hit Enter")
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        finaltag=$(echo ${edittagsmenu} | sed 's/,/, /g')
        buku -u ${id} --tag ${finaltag}
    fi
    mode=bookmarks main
}

editBookmark () {
    bmarkmenu=$(echo "" | _rofi -p "> " -filter "${bookmark}" -mesg "Edit Bookmark and hit Enter")
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        if [[ $bmarkmenu == "http"* ]]; then
            buku -u "${id}" --url "${bookmark}"
        else
            echo "" | rofi -e "Not a valid URI, Make sure URLs start with http"
            editBookmark
        fi
    fi
}

addMark () {
    inserturl=$(echo -e "$(xclip -o)" | _rofi -p '> ' -mesg "Use URL below or type manually")
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        addTags
    fi
}

addTags () {
    inserttags=$(echo | _rofi -p '> ' -mesg "Add some tags. Separate tags with ', '")
    val=$?
    if [[ $val -eq 1 ]]; then
        exit
    elif [[ $val -eq 0 ]]; then
        buku -a "${inserturl}" ${inserttags}
    fi
}
mode=bookmarks main
